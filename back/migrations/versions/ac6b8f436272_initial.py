"""initial

Revision ID: ac6b8f436272
Revises:
Create Date: 2024-12-21 12:03:13.116537+01:00

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "ac6b8f436272"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tb_db_parameters",
        sa.Column("APP_TAGLINE", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "tb_periodic_task",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("task", sa.String(), nullable=False),
        sa.Column("interval", sa.Interval(), nullable=True),
        sa.Column("crontab_expression", sa.String(), nullable=True),
        sa.Column("args", postgresql.JSON(astext_type=sa.Text()), nullable=False),
        sa.Column("kwargs", postgresql.JSON(astext_type=sa.Text()), nullable=False),
        sa.Column("start_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "modified_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.CheckConstraint(
            "(interval IS NOT NULL AND crontab_expression IS NULL) OR (interval IS NULL AND crontab_expression IS NOT NULL)",
            name="check_interval_or_crontab_expression",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_tb_periodic_task_name"), "tb_periodic_task", ["name"], unique=True
    )
    op.create_table(
        "tb_user",
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("phone_number", sa.String(), nullable=True),
        sa.Column("hashed_password", sa.String(), nullable=True),
        sa.Column("linkedin_id", sa.String(), nullable=True),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("id", sa.String(), nullable=False),
        sa.CheckConstraint(
            "(hashed_password IS NOT NULL AND linkedin_id IS NULL) OR (hashed_password IS NULL AND linkedin_id IS NOT NULL)",
            name="check_auth_method_consistency",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tb_user_email"), "tb_user", ["email"], unique=True)
    op.create_index(
        op.f("ix_tb_user_linkedin_id"), "tb_user", ["linkedin_id"], unique=True
    )
    op.create_table(
        "tb_badge",
        sa.Column("owner_id", sa.String(), nullable=False),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "modified_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("expire_at", sa.DateTime(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["tb_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("tb_badge")
    op.drop_index(op.f("ix_tb_user_linkedin_id"), table_name="tb_user")
    op.drop_index(op.f("ix_tb_user_email"), table_name="tb_user")
    op.drop_table("tb_user")
    op.drop_index(op.f("ix_tb_periodic_task_name"), table_name="tb_periodic_task")
    op.drop_table("tb_periodic_task")
    op.drop_table("tb_db_parameters")
    # ### end Alembic commands ###
