name: CI

on:
  push:
    branches:
      - main
      - actions
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    environment: fast-batteries-CI

    services:
      postgres:
        image: postgres:17-bookworm
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ vars.FAPI_POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ vars.FAPI_POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ vars.FAPI_POSTGRES_DB }}
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd="pg_isready -U ${{ vars.FAPI_POSTGRES_USER }} -d ${{ vars.FAPI_POSTGRES_DB }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      # Main
      FAPI_BACK_DOMAIN: ${{ vars.FAPI_BACK_DOMAIN }}
      FAPI_FRONT_DOMAIN: ${{ vars.FAPI_FRONT_DOMAIN }}
      FAPI_ENVIRONMENT: ${{ vars.FAPI_ENVIRONMENT }}

      # Logging
      FAPI_USE_LOGFIRE: ${{ vars.FAPI_USE_LOGFIRE }}

      # Social Auth
      FAPI_LINKEDIN_CLIENT_ID: ${{ vars.FAPI_LINKEDIN_CLIENT_ID }}
      FAPI_LINKEDIN_CLIENT_SECRET: ${{ vars.FAPI_LINKEDIN_CLIENT_SECRET }}

      # Security
      FAPI_DEBUG: ${{ vars.FAPI_DEBUG }}
      FAPI_PROTOCOL: ${{ vars.FAPI_PROTOCOL }}
      FAPI_SECRET_KEY: ${{ vars.FAPI_SECRET_KEY }}
      FAPI_CORS_ALLOW_ORIGIN: ${{ vars.FAPI_CORS_ALLOW_ORIGIN }}

      # Email
      FAPI_EMAIL_BACKEND: ${{ vars.FAPI_EMAIL_BACKEND }}

      # Database
      FAPI_DATABASE_ALLOW_RESET: ${{ vars.FAPI_DATABASE_ALLOW_RESET }}
      FAPI_DATABASE_ECHO: ${{ vars.FAPI_DATABASE_ECHO }}
      FAPI_POSTGRES_SERVER: ${{ vars.FAPI_POSTGRES_SERVER }}
      FAPI_POSTGRES_USER: ${{ vars.FAPI_POSTGRES_USER }}
      FAPI_POSTGRES_PASSWORD: ${{ vars.FAPI_POSTGRES_PASSWORD }}
      FAPI_POSTGRES_DB: ${{ vars.FAPI_POSTGRES_DB }}
      FAPI_POSTGRES_ADMIN_USER: ${{ vars.FAPI_POSTGRES_ADMIN_USER }}
      FAPI_POSTGRES_ADMIN_PASSWORD: ${{ vars.FAPI_POSTGRES_ADMIN_PASSWORD }}

      # Redis
      FAPI_REDIS_SERVER: ${{ vars.FAPI_REDIS_SERVER }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.13.1
        uses: actions/setup-python@v4
        with:
          python-version: 3.13.1

      - name: Debug Networking
        run: ping -c 4 postgres

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Export requirements.txt
        working-directory: back
        run: poetry export -f requirements.txt --output requirements.txt --without-hashes

      - name: Install dependencies from requirements.txt
        working-directory: back
        run: |
          python -m pip install --no-cache-dir --upgrade pip
          pip install --no-cache-dir --upgrade -r requirements.txt

      - name: Run tests
        working-directory: back
        run: pytest
